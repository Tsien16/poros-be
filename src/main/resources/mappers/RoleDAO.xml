<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tsien.poros.dao.RoleDAO">

    <resultMap id="BaseResultMap" type="com.tsien.poros.model.RoleDO">
        <!--@mbg.generated-->
        <!--@Table role-->
        <id column="role_id" jdbcType="BIGINT" property="roleId"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="role_code" jdbcType="VARCHAR" property="roleCode"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="is_deleted" jdbcType="BOOLEAN" property="isDeleted"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <resultMap id="VOResultMap" type="com.tsien.poros.vo.RoleVO">
        <!--@mbg.generated-->
        <!--@Table role-->
        <id column="role_id" jdbcType="BIGINT" property="roleId"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="role_code" jdbcType="VARCHAR" property="roleCode"/>
    </resultMap>

    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        role_id, role_name, role_code, remark, is_deleted, create_time, update_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from role
        where role_id = #{roleId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete from role
        where role_id = #{roleId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="role_id" keyProperty="roleId" parameterType="com.tsien.poros.model.RoleDO"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into role (role_name, role_code, remark,
        is_deleted, create_time, update_time
        )
        values (#{roleName,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
        #{isDeleted,jdbcType=BOOLEAN}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" keyColumn="role_id" keyProperty="roleId" parameterType="com.tsien.poros.model.RoleDO"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleName != null and roleName != ''">
                role_name,
            </if>
            <if test="roleCode != null and roleCode != ''">
                role_code,
            </if>
            <if test="remark != null and remark != ''">
                remark,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleName != null and roleName != ''">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleCode != null and roleCode != ''">
                #{roleCode,jdbcType=VARCHAR},
            </if>
            <if test="remark != null and remark != ''">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=BOOLEAN},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.tsien.poros.model.RoleDO">
        <!--@mbg.generated-->
        update role
        <set>
            <if test="roleName != null and roleName != ''">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleCode != null and roleCode != ''">
                role_code = #{roleCode,jdbcType=VARCHAR},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=BOOLEAN},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where role_id = #{roleId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tsien.poros.model.RoleDO">
        <!--@mbg.generated-->
        update role
        set role_name = #{roleName,jdbcType=VARCHAR},
        role_code = #{roleCode,jdbcType=VARCHAR},
        remark = #{remark,jdbcType=VARCHAR},
        is_deleted = #{isDeleted,jdbcType=BOOLEAN},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where role_id = #{roleId,jdbcType=BIGINT}
    </update>

    <select id="listRolesByUserId" parameterType="long" resultMap="BaseResultMap">
        select role.role_id,
        role.role_name,
        role.role_code,
        role.remark,
        role.is_deleted,
        role.create_time,
        role.update_time
        from role,
        role_user_relation rur
        where role.role_id = rur.role_id
        and rur.user_id =#{userId}
        and role.is_deleted = 0
    </select>

    <select id="listRolesByResourceId" parameterType="long" resultMap="BaseResultMap">
        select role.role_id,
        role.role_name,
        role.role_code,
        role.remark,
        role.is_deleted,
        role.create_time,
        role.update_time
        from role,
        role_resource_relation rrr
        where role.role_id=rrr.role_id
        and rrr.resource_id=#{resourceId}
        and role.is_deleted = 0
    </select>

    <select id="listRolesByResourceUrlAndRequestMethod" resultMap="VOResultMap">
        select role.role_id,
        role.role_name,
        role.role_code
        from role,
        role_resource_relation rrr,
        resource
        where role.role_id = rrr.role_id
        and rrr.resource_id=resource.resource_id
        and resource.resource_path=#{resourceUrl}
        and resource.request_method=#{requestMethod}
        and resource.is_deleted=0
        and resource.is_enabled=1
        and role.is_deleted=0
    </select>

</mapper>